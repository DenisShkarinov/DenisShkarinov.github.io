"use strict";

$(window).on('load', function () {
  $('body').addClass('loaded_hiding');
  window.setTimeout(function () {
    $('body').addClass('loaded');
    $('body').removeClass('loaded_hiding');
  }, 500);
})

AOS.init({
   // Global settings:
  disable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function
  startEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on
  initClassName: 'aos-init', // class applied after initialization
  animatedClassName: 'aos-animate', // class applied on animation
  useClassNames: false, // if true, will add content of `data-aos` as classes on scroll
  disableMutationObserver: false, // disables automatic mutations' detections (advanced)
  debounceDelay: 50, // the delay on debounce used while resizing window (advanced)
  throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)
  // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:
  offset: 120, // offset (in px) from the original trigger point
  delay: 0, // values from 0 to 3000, with step 50ms
  duration: 400, // values from 0 to 3000, with step 50ms
  easing: 'ease', // default easing for AOS animations
  once: false, // whether animation should happen only once - while scrolling down
  mirror: false, // whether elements should animate out while scrolling past them
  anchorPlacement: 'top-bottom', // defines which position of the element regarding to window should trigger the animation
});


/* accordeon
let acc = document.getElementsByClassName("accordion");
let i;

for (i = 0; i < acc.length; i++) {
  acc[i].addEventListener("click", function() {
    this.classList.toggle("active");
    var panel = this.nextElementSibling;
    if (panel.style.maxHeight){
      panel.style.maxHeight = null;
    } else {
      panel.style.maxHeight = panel.scrollHeight + "px";
    } 
  });
}
*/
var $grid = $('.portfolio').isotope({
  // options
});

$('.burger__menu').on('click', function(e) {
  e.preventDefault();
  $(this).toggleClass('burger__menu__active');
  $('.mobile__list').toggleClass('mobile__list__active');
})
$('.mobile__list__active li > a').click(function() {
  $(this).toggle();
  $('.burger__menu__active').toggleClass('burger__menu');
})

$('.portfolio-menu > li').on('click', function() {
  $('li').siblings('.active__item').removeClass('active__item');
  $(this).addClass('active__item');

  var filterValue = $(this).attr('data-filter');
  $grid.isotope({
      filter: filterValue
  })
})

let swiper = new Swiper('.swiper-main', {
  autoplay: {
    delay: 5000,
    waitForTransition: true
  },
  navigation: {
    nextEl: '.swiper-button-next',
    prevEl: '.swiper-button-prev',
    hiddenClass: '.swiper-button-hidden'
  },
  pagination: {
    el: '.swiper-pagination',
    type: 'bullets'
  },
})

let clients = new Swiper('.clients-swiper', {
  fadeEffect: {
    crossFade: true
  },
  autoplay: {
    delay: 5000
  },
  pagination: {
    el: '.swiper-pagination',
    type: 'bullets',
    clickable: true
  },
  breakpoints: {
    320: {
      slidesPerView: 1,
      spaceBetween: 100
    },
    360: {
      slidesPerView: 1,
      spaceBetween: 20,
    },
    640: {
      slidesPerView: 2,
      spaceBetween: 30
    },
    1280: {
      slidesPerView: 3,
      spaceBetween: 35
    }
  }
})

let clientsLogo = new Swiper('.logo-swiper', {
  fadeEffect: {
    crossFade: true
  },
  loop: true,
  autoplay: {
    delay: 2500
  },
  pagination: {
    el: '.swiper-pagination',
    type: 'bullets',
    clickable: true
  },
  breakpoints: {
    320: {
      slidesPerView: 2,
      spaceBetween: 30
    },
    480: {
      slidesPerView: 2,
      spaceBetween: 30
    },
    640: {
      slidesPerView: 3
    },
    720: {
      slidesPerView: 4
    },
    1280: {
      slidesPerView: 5,
      spaceBetween: 35
    }
  }
})
